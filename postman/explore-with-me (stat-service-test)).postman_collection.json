{
	"info": {
		"_postman_id": "00253d11-7e2a-4049-9d52-efd32264f88b",
		"name": "explore-with-me (stat-service-test))",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23624031"
	},
	"item": [
		{
			"name": "Create first hit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"app\": \"ewm-main-service\",\r\n  \"uri\": \"/events/1\",\r\n  \"ip\": \"192.163.0.1\",\r\n  \"timestamp\": \"2022-09-06 11:00:23\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/hit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create first hit fail no app",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.be.badRequest;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"app\": \"\",\r\n  \"uri\": \"/events/1\",\r\n  \"ip\": \"192.163.0.1\",\r\n  \"timestamp\": \"2022-09-06 11:00:23\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/hit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create first hit fail no IP",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.be.badRequest;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"app\": \"ewm-main-service\",\r\n  \"uri\": \"/events/1\",\r\n  \"timestamp\": \"2022-09-06 11:00:23\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/hit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create first hit fail no uri",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.be.badRequest;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"app\": \"ewm-main-service\",\r\n  \"ip\": \"192.163.0.1\",\r\n  \"timestamp\": \"2022-09-06 11:00:23\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/hit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create second hit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"app\": \"ewm-main-service\",\r\n  \"uri\": \"/events/1\",\r\n  \"ip\": \"192.163.0.1\",\r\n  \"timestamp\": \"2022-09-07 11:00:23\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/hit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create first hit from enother user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"app\": \"ewm-main-service\",\r\n  \"uri\": \"/events/1\",\r\n  \"ip\": \"192.163.0.2\",\r\n  \"timestamp\": \"2022-09-06 11:00:23\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/hit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create first hit to enother uri",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"app\": \"ewm-main-service\",\r\n  \"uri\": \"/events/2\",\r\n  \"ip\": \"192.163.0.2\",\r\n  \"timestamp\": \"2022-09-06 11:00:23\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/hit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get not unique ip stat",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"\r",
							"var start = moment().add(1, 'd');\r",
							"var end = moment().add(2, 'd');\r",
							"pm.environment.set('start', start.format('YYYY-MM-DDTHH:mm:ss'));\r",
							"pm.environment.set('end', end.format('YYYY-MM-DDTHH:mm:ss'));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get not unique ip stat\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).is.an('array');\r",
							"    pm.expect(jsonData.length, 'users count in total').to.eql(1);\r",
							"\r",
							"    pm.expect(jsonData[0].app, '\"app\" field').to.eql('ewm-main-service');\r",
							"    pm.expect(jsonData[0].uri, '\"uril\" field').to.eql('/events/1');\r",
							"    pm.expect(jsonData[0].hits, '\"hits\" field').to.eql(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stats?start=2021-09-06%2011%3A00%3A23&end=2023-09-06%2011%3A00%3A23&uris=/events/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stats"
					],
					"query": [
						{
							"key": "start",
							"value": "2021-09-06%2011%3A00%3A23"
						},
						{
							"key": "end",
							"value": "2023-09-06%2011%3A00%3A23"
						},
						{
							"key": "uris",
							"value": "/events/1"
						},
						{
							"key": "unique",
							"value": "false",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get not unique ip stat by 2 uri",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"\r",
							"var start = moment().add(1, 'd');\r",
							"var end = moment().add(2, 'd');\r",
							"pm.environment.set('start', start.format('YYYY-MM-DDTHH:mm:ss'));\r",
							"pm.environment.set('end', end.format('YYYY-MM-DDTHH:mm:ss'));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get not unique ip stat\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).is.an('array');\r",
							"    pm.expect(jsonData.length, 'users count in total').to.eql(2);\r",
							"\r",
							"    pm.expect(jsonData[0].app, '\"app\" field').to.eql('ewm-main-service');\r",
							"    pm.expect(jsonData[0].uri, '\"uril\" field').to.eql('/events/1');\r",
							"    pm.expect(jsonData[0].hits, '\"hits\" field').to.eql(3);\r",
							"\r",
							"    pm.expect(jsonData[1].app, '\"app\" field').to.eql('ewm-main-service');\r",
							"    pm.expect(jsonData[1].uri, '\"uril\" field').to.eql('/events/2');\r",
							"    pm.expect(jsonData[1].hits, '\"hits\" field').to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stats?start=2021-09-06%2011%3A00%3A23&end=2023-09-06%2011%3A00%3A23&uris=/events/1, /events/2&unique=false",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stats"
					],
					"query": [
						{
							"key": "start",
							"value": "2021-09-06%2011%3A00%3A23"
						},
						{
							"key": "end",
							"value": "2023-09-06%2011%3A00%3A23"
						},
						{
							"key": "uris",
							"value": "/events/1, /events/2"
						},
						{
							"key": "unique",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get unique ip stat by 2 uri",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"\r",
							"var start = moment().add(1, 'd');\r",
							"var end = moment().add(2, 'd');\r",
							"pm.environment.set('start', start.format('YYYY-MM-DDTHH:mm:ss'));\r",
							"pm.environment.set('end', end.format('YYYY-MM-DDTHH:mm:ss'));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get not unique ip stat\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).is.an('array');\r",
							"    pm.expect(jsonData.length, 'users count in total').to.eql(2);\r",
							"\r",
							"    pm.expect(jsonData[0].app, '\"app\" field').to.eql('ewm-main-service');\r",
							"    pm.expect(jsonData[0].uri, '\"uril\" field').to.eql('/events/1');\r",
							"    pm.expect(jsonData[0].hits, '\"hits\" field').to.eql(2);\r",
							"\r",
							"    pm.expect(jsonData[1].app, '\"app\" field').to.eql('ewm-main-service');\r",
							"    pm.expect(jsonData[1].uri, '\"uril\" field').to.eql('/events/2');\r",
							"    pm.expect(jsonData[1].hits, '\"hits\" field').to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stats?start=2021-09-06%2011%3A00%3A23&end=2023-09-06%2011%3A00%3A23&uris=/events/1, /events/2&unique=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stats"
					],
					"query": [
						{
							"key": "start",
							"value": "2021-09-06%2011%3A00%3A23"
						},
						{
							"key": "end",
							"value": "2023-09-06%2011%3A00%3A23"
						},
						{
							"key": "uris",
							"value": "/events/1, /events/2"
						},
						{
							"key": "unique",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get unique ip stat fail empty uris",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"\r",
							"var start = moment().add(1, 'd');\r",
							"var end = moment().add(2, 'd');\r",
							"pm.environment.set('start', start.format('YYYY-MM-DDTHH:mm:ss'));\r",
							"pm.environment.set('end', end.format('YYYY-MM-DDTHH:mm:ss'));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.be.badRequest;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stats?start=2021-09-06%2011%3A00%3A23&end=2023-09-06%2011%3A00%3A23&unique=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stats"
					],
					"query": [
						{
							"key": "start",
							"value": "2021-09-06%2011%3A00%3A23"
						},
						{
							"key": "end",
							"value": "2023-09-06%2011%3A00%3A23"
						},
						{
							"key": "unique",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get unique ip stat fail end before start",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"\r",
							"var start = moment().add(1, 'd');\r",
							"var end = moment().add(2, 'd');\r",
							"pm.environment.set('start', start.format('YYYY-MM-DDTHH:mm:ss'));\r",
							"pm.environment.set('end', end.format('YYYY-MM-DDTHH:mm:ss'));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.be.badRequest;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stats?start=2023-09-06%2011%3A00%3A23&end=2021-09-06%2011%3A00%3A23&unique=true&uris=/events/1, /events/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stats"
					],
					"query": [
						{
							"key": "start",
							"value": "2023-09-06%2011%3A00%3A23"
						},
						{
							"key": "end",
							"value": "2021-09-06%2011%3A00%3A23"
						},
						{
							"key": "unique",
							"value": "true"
						},
						{
							"key": "uris",
							"value": "/events/1, /events/2"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:9090",
			"type": "string"
		}
	]
}